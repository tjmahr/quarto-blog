[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "TJ Mahr’s blog",
    "section": "",
    "text": "Builder Teej is yelling something at us! 👷\n\n\n\nWhoa whoa, you see the barricades here? 🚧🚧🚧\nThis place is under construction! This is just a temporary sandbox while I (figure out how to) migrate to a quarto blog!\nAnd besides I can’t let you in without a hard hat on.\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\nplaying with quatro\n\n\n\n\n\nthis is STILL in beta\n\n\n\n\n\n\nJul 2, 2023\n\n\n\n\n\n\n  \n\n\n\n\nConfusion matrix statistics on late talker diagnoses\n\n\n\n\n\nPositive predictive values and the like.\n\n\n\n\n\n\nOct 6, 2015\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/confusion-matrix-late-talkers/index.html",
    "href": "posts/confusion-matrix-late-talkers/index.html",
    "title": "Confusion matrix statistics on late talker diagnoses",
    "section": "",
    "text": "How many late talkers are just late bloomers? More precisely, how many children identified as late talkers at 18 months catch up to the normal range by one year later? This is an important question. From a clinical perspective, we want to support children with language delays, but it is also inefficient to spend resources fixing a self-correcting problem.\nFernald and Marchman (2012) touch on this question. Children falling below the 20th percentile in vocabulary score at 18 months were labeled “late talkers”. These children, along with a control group of timely-talkers, participated in an eyetracking study at 18 months and had their vocabulary measured every 3 months until 30 months of age.\nIn their sample, 22 of 36 late talkers were late bloomers, catching up to the normal vocabulary range at 30 months, and 42 of 46 timely talkers remained in the normal range of vocab development. The authors later report that eyetracking reaction times at 18 months predicted rates of vocabulary growth in both groups. In particular, the late-bloomers were significantly faster than the children who did not catch up.\nThe authors repeatedly report confusion matrix statistics on different subsets of the data. Which make sense: The question of late bloomers is also a question about the positive predictive value of a late-talker diagnosis. In the majority of cases, a “late talker” label at 18 months did not predict continued delay one year later. Therefore, the diagnosis has poor positive predictive value (14/36 = 39%)."
  },
  {
    "objectID": "posts/confusion-matrix-late-talkers/index.html#confusion-matrix-measures-in-r",
    "href": "posts/confusion-matrix-late-talkers/index.html#confusion-matrix-measures-in-r",
    "title": "Confusion matrix statistics on late talker diagnoses",
    "section": "Confusion Matrix Measures in R",
    "text": "Confusion Matrix Measures in R\nI would like to report similar classification quantities in my own analyses, so I figured out how to reproduce their results in R. And it’s as simple as calling the caret::confusionMatrix() function in the caret package.\nFirst, let’s re-create their data. We’ll make a long dataframe with one row per child reported in the study. We will have fields for each child’s initial Group (late talking or within-normal-limits at 18 months), their Predicted group (assuming late-talking children remain delayed), and the observed Outcome.\n\nlibrary(dplyr)\n\n# LT: late talking\n# WNL: within normal limits\ngroups &lt;- c(\"WNL at 18m\", \"LT at 18m\")\noutcomes &lt;- c(\"WNL at 30m\", \"Delayed at 30m\")\n\n# Counts from paper\nlt_still_delayed &lt;- 14\nlt_bloomed &lt;- 22\n\nwnl_still_wnl &lt;- 42\nwnl_delayed &lt;- 4\n\n# Reproduce their data-set (one row per reported child)\nwnl_data &lt;- tibble(\n  Group = groups[1],\n  Predicted = outcomes[1],\n  Outcome = rep(outcomes, times = c(wnl_still_wnl, wnl_delayed))\n)\n\nlt_data &lt;- tibble(\n  Group = \"LT at 18m\",\n  Outcome = rep(outcomes, times = c(lt_bloomed, lt_still_delayed)),\n  Predicted = outcomes[2]\n)\n\nall_kids &lt;- bind_rows(wnl_data, lt_data) %&gt;%\n  mutate(ChildID = seq_along(Outcome)) %&gt;% \n  select(ChildID, Group, Predicted, Outcome) %&gt;% \n  mutate(\n    Predicted = factor(Predicted, outcomes),\n    Outcome = factor(Outcome, outcomes)\n  )\n\nWhat we have looks like a real data-set now.\n\nall_kids %&gt;% \n  sample_n(8, replace = FALSE) %&gt;% \n  arrange(Group, Predicted, Outcome)\n#&gt; # A tibble: 8 × 4\n#&gt;   ChildID Group      Predicted      Outcome   \n#&gt;     &lt;int&gt; &lt;chr&gt;      &lt;fct&gt;          &lt;fct&gt;     \n#&gt; 1      47 LT at 18m  Delayed at 30m WNL at 30m\n#&gt; 2      52 LT at 18m  Delayed at 30m WNL at 30m\n#&gt; 3      60 LT at 18m  Delayed at 30m WNL at 30m\n#&gt; 4       1 WNL at 18m WNL at 30m     WNL at 30m\n#&gt; 5      16 WNL at 18m WNL at 30m     WNL at 30m\n#&gt; 6      19 WNL at 18m WNL at 30m     WNL at 30m\n#&gt; 7      34 WNL at 18m WNL at 30m     WNL at 30m\n#&gt; 8      27 WNL at 18m WNL at 30m     WNL at 30m\n\nNext, we just call caret::confusionMatrix() on the predicted values and the reference values.\n\nconf_mat &lt;- caret::confusionMatrix(all_kids$Predicted, all_kids$Outcome)\nconf_mat\n#&gt; Confusion Matrix and Statistics\n#&gt; \n#&gt;                 Reference\n#&gt; Prediction       WNL at 30m Delayed at 30m\n#&gt;   WNL at 30m             42              4\n#&gt;   Delayed at 30m         22             14\n#&gt;                                           \n#&gt;                Accuracy : 0.6829          \n#&gt;                  95% CI : (0.5708, 0.7813)\n#&gt;     No Information Rate : 0.7805          \n#&gt;     P-Value [Acc &gt; NIR] : 0.9855735       \n#&gt;                                           \n#&gt;                   Kappa : 0.3193          \n#&gt;                                           \n#&gt;  Mcnemar's Test P-Value : 0.0008561       \n#&gt;                                           \n#&gt;             Sensitivity : 0.6562          \n#&gt;             Specificity : 0.7778          \n#&gt;          Pos Pred Value : 0.9130          \n#&gt;          Neg Pred Value : 0.3889          \n#&gt;              Prevalence : 0.7805          \n#&gt;          Detection Rate : 0.5122          \n#&gt;    Detection Prevalence : 0.5610          \n#&gt;       Balanced Accuracy : 0.7170          \n#&gt;                                           \n#&gt;        'Positive' Class : WNL at 30m      \n#&gt; \n\nHere, we can confirm the positive predictive value (true positives / positive calls)1 is 14/36 = 0.913. The negative predictive value is noteworthy; most children not diagnosed as late talkers did not show a delay one year later (NPV = 42/46 = 0.3889).\n\nSession info:\n\n.session_info\n#&gt; ─ Session info ───────────────────────────────────────────────────────────────\n#&gt;  setting  value\n#&gt;  version  R version 4.3.0 (2023-04-21 ucrt)\n#&gt;  os       Windows 11 x64 (build 22621)\n#&gt;  system   x86_64, mingw32\n#&gt;  ui       RTerm\n#&gt;  language (EN)\n#&gt;  collate  English_United States.utf8\n#&gt;  ctype    English_United States.utf8\n#&gt;  tz       America/Chicago\n#&gt;  date     2023-07-14\n#&gt;  pandoc   3.1.1 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n#&gt; \n#&gt; ─ Packages ───────────────────────────────────────────────────────────────────\n#&gt;  package      * version    date (UTC) lib source\n#&gt;  caret          6.0-94     2023-03-21 [1] CRAN (R 4.3.1)\n#&gt;  class          7.3-21     2023-01-23 [2] CRAN (R 4.3.0)\n#&gt;  cli            3.6.1      2023-03-23 [1] CRAN (R 4.3.0)\n#&gt;  codetools      0.2-19     2023-02-01 [2] CRAN (R 4.3.0)\n#&gt;  colorspace     2.1-0      2023-01-23 [1] CRAN (R 4.3.0)\n#&gt;  data.table     1.14.8     2023-02-17 [1] CRAN (R 4.3.0)\n#&gt;  digest         0.6.33     2023-07-07 [1] CRAN (R 4.3.1)\n#&gt;  dplyr        * 1.1.2      2023-04-20 [1] CRAN (R 4.3.0)\n#&gt;  e1071          1.7-13     2023-02-01 [1] CRAN (R 4.3.1)\n#&gt;  evaluate       0.21       2023-05-05 [1] CRAN (R 4.3.0)\n#&gt;  fansi          1.0.4      2023-01-22 [1] CRAN (R 4.3.0)\n#&gt;  fastmap        1.1.1      2023-02-24 [1] CRAN (R 4.3.0)\n#&gt;  foreach        1.5.2      2022-02-02 [1] CRAN (R 4.3.1)\n#&gt;  future         1.33.0     2023-07-01 [1] CRAN (R 4.3.0)\n#&gt;  future.apply   1.11.0     2023-05-21 [1] CRAN (R 4.3.1)\n#&gt;  generics       0.1.3      2022-07-05 [1] CRAN (R 4.3.0)\n#&gt;  ggplot2        3.4.2      2023-04-03 [1] CRAN (R 4.3.0)\n#&gt;  globals        0.16.2     2022-11-21 [1] CRAN (R 4.3.0)\n#&gt;  glue           1.6.2      2022-02-24 [1] CRAN (R 4.3.0)\n#&gt;  gower          1.0.1      2022-12-22 [1] CRAN (R 4.3.0)\n#&gt;  gtable         0.3.3      2023-03-21 [1] CRAN (R 4.3.0)\n#&gt;  hardhat        1.3.0      2023-03-30 [1] CRAN (R 4.3.1)\n#&gt;  htmltools      0.5.5      2023-03-23 [1] CRAN (R 4.3.0)\n#&gt;  htmlwidgets    1.6.2      2023-03-17 [1] CRAN (R 4.3.0)\n#&gt;  ipred          0.9-14     2023-03-09 [1] CRAN (R 4.3.1)\n#&gt;  iterators      1.0.14     2022-02-05 [1] CRAN (R 4.3.1)\n#&gt;  jsonlite       1.8.7      2023-06-29 [1] CRAN (R 4.3.1)\n#&gt;  knitr          1.43       2023-05-25 [1] CRAN (R 4.3.0)\n#&gt;  lattice        0.21-8     2023-04-05 [2] CRAN (R 4.3.0)\n#&gt;  lava           1.7.2.1    2023-02-27 [1] CRAN (R 4.3.1)\n#&gt;  lifecycle      1.0.3      2022-10-07 [1] CRAN (R 4.3.0)\n#&gt;  listenv        0.9.0      2022-12-16 [1] CRAN (R 4.3.0)\n#&gt;  lubridate      1.9.2      2023-02-10 [1] CRAN (R 4.3.0)\n#&gt;  magrittr       2.0.3      2022-03-30 [1] CRAN (R 4.3.0)\n#&gt;  MASS           7.3-60     2023-05-04 [1] CRAN (R 4.3.0)\n#&gt;  Matrix         1.6-0      2023-07-08 [1] CRAN (R 4.3.1)\n#&gt;  ModelMetrics   1.2.2.2    2020-03-17 [1] CRAN (R 4.3.1)\n#&gt;  munsell        0.5.0      2018-06-12 [1] CRAN (R 4.3.0)\n#&gt;  nlme           3.1-162    2023-01-31 [2] CRAN (R 4.3.0)\n#&gt;  nnet           7.3-19     2023-05-03 [1] CRAN (R 4.3.0)\n#&gt;  parallelly     1.36.0     2023-05-26 [1] CRAN (R 4.3.0)\n#&gt;  pillar         1.9.0      2023-03-22 [1] CRAN (R 4.3.0)\n#&gt;  pkgconfig      2.0.3      2019-09-22 [1] CRAN (R 4.3.0)\n#&gt;  plyr           1.8.8      2022-11-11 [1] CRAN (R 4.3.0)\n#&gt;  pROC           1.18.4     2023-07-06 [1] CRAN (R 4.3.1)\n#&gt;  prodlim        2023.03.31 2023-04-02 [1] CRAN (R 4.3.1)\n#&gt;  proxy          0.4-27     2022-06-09 [1] CRAN (R 4.3.1)\n#&gt;  purrr          1.0.1      2023-01-10 [1] CRAN (R 4.3.0)\n#&gt;  R6             2.5.1      2021-08-19 [1] CRAN (R 4.3.0)\n#&gt;  ragg           1.2.5      2023-01-12 [1] CRAN (R 4.3.0)\n#&gt;  Rcpp           1.0.11     2023-07-06 [1] CRAN (R 4.3.1)\n#&gt;  recipes        1.0.6      2023-04-25 [1] CRAN (R 4.3.1)\n#&gt;  reshape2       1.4.4      2020-04-09 [1] CRAN (R 4.3.0)\n#&gt;  rlang          1.1.1      2023-04-28 [1] CRAN (R 4.3.0)\n#&gt;  rmarkdown      2.23       2023-07-01 [1] CRAN (R 4.3.0)\n#&gt;  rpart          4.1.19     2022-10-21 [2] CRAN (R 4.3.0)\n#&gt;  rstudioapi     0.15.0     2023-07-07 [1] CRAN (R 4.3.1)\n#&gt;  scales         1.2.1      2022-08-20 [1] CRAN (R 4.3.0)\n#&gt;  sessioninfo    1.2.2      2021-12-06 [1] CRAN (R 4.3.0)\n#&gt;  stringi        1.7.12     2023-01-11 [1] CRAN (R 4.3.0)\n#&gt;  stringr        1.5.0      2022-12-02 [1] CRAN (R 4.3.0)\n#&gt;  survival       3.5-5      2023-03-12 [2] CRAN (R 4.3.0)\n#&gt;  systemfonts    1.0.4      2022-02-11 [1] CRAN (R 4.3.0)\n#&gt;  textshaping    0.3.6      2021-10-13 [1] CRAN (R 4.3.0)\n#&gt;  tibble         3.2.1      2023-03-20 [1] CRAN (R 4.3.0)\n#&gt;  tidyselect     1.2.0      2022-10-10 [1] CRAN (R 4.3.0)\n#&gt;  timechange     0.2.0      2023-01-11 [1] CRAN (R 4.3.0)\n#&gt;  timeDate       4022.108   2023-01-07 [1] CRAN (R 4.3.0)\n#&gt;  utf8           1.2.3      2023-01-31 [1] CRAN (R 4.3.0)\n#&gt;  vctrs          0.6.3      2023-06-14 [1] CRAN (R 4.3.1)\n#&gt;  withr          2.5.0      2022-03-03 [1] CRAN (R 4.3.0)\n#&gt;  xfun           0.39       2023-04-20 [1] CRAN (R 4.3.0)\n#&gt;  yaml           2.3.7      2023-01-23 [1] CRAN (R 4.3.0)\n#&gt; \n#&gt;  [1] C:/Users/Tristan/AppData/Local/R/win-library/4.3\n#&gt;  [2] C:/Program Files/R/R-4.3.0/library\n#&gt; \n#&gt; ──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "posts/confusion-matrix-late-talkers/index.html#footnotes",
    "href": "posts/confusion-matrix-late-talkers/index.html#footnotes",
    "title": "Confusion matrix statistics on late talker diagnoses",
    "section": "Footnotes",
    "text": "Footnotes\n\nTechnically, caret uses the sensitivity, specificity and prevalence form of the PPV calculation.↩︎"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "playing with quatro",
    "section": "",
    "text": "This is the not first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts.\nOkay!"
  }
]